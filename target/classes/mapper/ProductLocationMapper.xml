<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rft.deport.dao.ProductLocationMapper" >
  <resultMap id="BaseResultMap" type="com.rft.deport.entity.ProductLocation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="location_num" property="locationNum" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, location_num, product_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product_location
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product_location
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rft.deport.entity.ProductLocation" >
    insert into product_location (id, location_num, product_id
      )
    values (#{id,jdbcType=INTEGER}, #{locationNum,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rft.deport.entity.ProductLocation" >
    insert into product_location
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="locationNum != null" >
        location_num,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="locationNum != null" >
        #{locationNum,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.rft.deport.entity.ProductLocation" >
    update product_location
    <set >
      <if test="locationNum != null" >
        location_num = #{locationNum,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rft.deport.entity.ProductLocation" >
    update product_location
    set location_num = #{locationNum,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertList" parameterType="com.rft.deport.entity.ProductLocation">
     insert into product_location (location_num, product_id)
     values
     <foreach collection="list" index="index" item="item" separator=",">
       (#{item.locationNum,jdbcType=VARCHAR}, #{item.productId,jdbcType=VARCHAR})
       on duplicate key update
       location_num = #{item.locationNum,jdbcType=VARCHAR},
       product_id = #{item.productId,jdbcType=VARCHAR}
     </foreach>
  </insert>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from product_location
  </select>
  <delete id="deleteByNum" parameterType="java.lang.String">
    DELETE FROM product_location WHERE location_num = #{locationNum} AND product_id = #{proID}
  </delete>
</mapper>